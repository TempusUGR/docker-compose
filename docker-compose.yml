services:
  eureka-service:
    image: eureka-service:latest
    container_name: eureka-service
    ports:
      - "8761:8761"
    restart: always
    networks:
      - calendarugr
    environment:
      EUREKA_SERVER_URL: ${EUREKA_SERVER_URL}

  mysql:
    container_name: mysql
    image: mysql:8.0.41
    ports:
      - "3307:3306"
    restart: always
    networks:
      - calendarugr
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
      - /home/juanmi/mysql-scripts/init.sql:/docker-entrypoint-initdb.d/init.sql

  mongodb:
    container_name: mongodb
    image: mongo:6.0.4
    ports:
      - "27018:27017"
    restart: always
    networks:
      - calendarugr
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodb-data:/data/db

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"
    restart: always
    networks:
      - calendarugr
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}

  user-service:
    image: user-service:latest
    container_name: user-service
    ports:
      - "8081:8081"
    restart: always
    networks:
      - calendarugr
    environment:
      EUREKA_URL: ${EUREKA_SERVER_URL}
      DB_USERNAME: ${USER_SERVICE_DB_USERNAME}
      DB_PASSWORD: ${USER_SERVICE_DB_PASSWORD}
      DB_URL: ${USER_SERVICE_DB_URL}
      API_KEY: ${API_KEY}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    depends_on:
      - mysql
      - eureka-service

  schedule-consumer-service:
    image: schedule-consumer-service:latest
    container_name: schedule-consumer-service
    ports:
      - "8083:8083"
    restart: always
    networks:
      - calendarugr
    environment:
      EUREKA_URL: ${EUREKA_SERVER_URL}
      DB_USERNAME: ${SCHEDULE_CONSUMER_SERVICE_DB_USERNAME}
      DB_PASSWORD: ${SCHEDULE_CONSUMER_SERVICE_DB_PASSWORD}
      DB_URL: ${SCHEDULE_CONSUMER_SERVICE_DB_URL}
      API_KEY: ${API_KEY}
    depends_on:
      - mysql
      - eureka-service

  mail-service:
    image: mail-service:latest
    container_name: mail-service
    ports:
      - "8082:8082"
    restart: always
    networks:
      - calendarugr
    environment:
      EUREKA_URL: ${EUREKA_SERVER_URL}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      API_KEY: ${API_KEY}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    depends_on:
      - eureka-service
      - rabbitmq

  auth-service:
    image: auth-service:latest
    container_name: auth-service
    ports:
      - "9000:9000"
    restart: always
    networks:
      - calendarugr
    environment:
      EUREKA_URL: ${EUREKA_SERVER_URL}
      JWT_SECRET: ${JWT_SECRET}
      API_KEY: ${API_KEY}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    depends_on:
      - eureka-service
      - rabbitmq

  api-gateway:
    image: api-gateway:latest
    container_name: api-gateway
    ports:
      - "8090:8090" # We would need to remove this, if we want to force HTTPS from Apache Reverse Proxy
    restart: always
    networks:
      - calendarugr
    environment:
      EUREKA_URL: ${EUREKA_SERVER_URL}
      JWT_SECRET: ${JWT_SECRET}
      API_KEY: ${API_KEY}
    depends_on:
      - eureka-service

  academic-subscription-service:
    image: academic-subscription-service:latest
    #container_name: academic-subscription-service
    #ports:
    #  - "8084:8084"
    ports:
      - "8084-8085:8084"
    restart: always
    networks:
      - calendarugr
    environment:
      EUREKA_URL: ${EUREKA_SERVER_URL}
      FTP_HOST: ${FTP_HOST}
      FTP_PORT: ${FTP_PORT}
      FTP_USERNAME: ${FTP_USERNAME}
      FTP_PASSWORD: ${FTP_PASSWORD}
      DM_NAME: ${ACADEMIC_SUBSCRIPTION_SERVICE_DB_NAME}
      DB_URL: ${ACADEMIC_SUBSCRIPTION_SERVICE_DB_URL}
      API_KEY: ${API_KEY}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
    depends_on:
      - mongodb
      - eureka-service
      - rabbitmq

  statistics-service:
    image: statistics-service:latest
    container_name: statistics-service
    ports:
      - "8086:8086"
    restart: always
    networks:
      - calendarugr
    environment:
      EUREKA_URL: ${EUREKA_SERVER_URL}
      DB_URL: ${STATISTICS_SERVICE_DB_URL}
      DB_NAME: ${STATISTICS_SERVICE_DB_NAME}
      API_KEY: ${API_KEY}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    depends_on:
      - mongodb
      - eureka-service
      - rabbitmq
      
networks:
  calendarugr:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16 # Changing the subnet because the default one conflicts with eduroam 
          gateway: 172.30.0.1

volumes:
  mysql-data:
  mongodb-data: